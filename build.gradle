buildscript {
	ext {
		springBootVersion = '1.3.5.RELEASE'
	}
	repositories {
		mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.moowork.gradle:gradle-node-plugin:0.13"
	}
}

apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'com.moowork.node'

jar {
	baseName = 'merchant'
	version = '0.0.1-SNAPSHOT'
}
sourceCompatibility = 1.8
targetCompatibility = 1.8

bootRun {
	if ( project.hasProperty('jvmArgs') ) {
		jvmArgs = (project.jvmArgs.split("\\s+") as List)

	}
}

repositories {
	mavenCentral()
}


dependencies {
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-devtools'

	compile 'org.postgresql:postgresql:9.4.1212.jre7'

	testCompile 'com.h2database:h2:1.3.148'
	testCompile 'org.springframework.boot:spring-boot-starter-test'
	testCompile 'org.spockframework:spock-spring:1.1-groovy-2.4-rc-2'
	testCompile 'org.gebish:geb-spock:0.10.0'
}

node {
    version = '0.12.2'
    npmVersion = '3.10.9'
    download = true
}

task bowerInstall(type: NodeTask) {
    script = file('node_modules/bower/bin/bower')
    args = ["--config.storage.cache=${gradle.getGradleUserHomeDir()}/caches/bower/cache",
            "--config.storage.packages=${gradle.getGradleUserHomeDir()}/caches/bower/packages",
            "--config.storage.registry=${gradle.getGradleUserHomeDir()}/caches/bower/registry",
            'install']
    inputs.files file('bower.json')
    outputs.files file('bower_components')
    dependsOn npmInstall
}

processResources.dependsOn bowerInstall
clean.delete << file('node_modules')
clean.delete << file('src/main/resources/static/bower_components')